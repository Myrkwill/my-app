{"version":3,"file":"static/js/1.2547f7ec.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"userPhoto\":\"ProfileInfo_userPhoto__PHwGN\"};","import React, { useState, useEffect } from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatusProfile(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"-------\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport styles from \"./ProfileInfo.module.css\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatusProfile}) => {\n  if (!profile) {\n    return null;\n  }\n  let profileImage = profile.photos.small || userPhoto;\n  return (\n    <div>\n      <div className={styles.descriptionBlock}>\n        <img src={profileImage} className={styles.userPhoto} />\n        <ProfileStatusWithHooks\n          status={status}\n          updateStatusProfile={updateStatusProfile}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport styles from './Post.module.css'\n\nconst Post = (props) => {\n\treturn (\n\t\t<div className={styles.item}>\n\t\t\t<img src=\"https://www.peta.org/wp-content/uploads/2017/09/Naruto-Selfie-Thumb.jpg\" />\n\t\t\t{props.message}\n\t\t\t<div>\n\t\t\t\t<span>likes: {props.likesCount}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Post;","import React from \"react\";\nimport styles from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Formik, Form, Field } from \"formik\";\n\nconst MyPosts = React.memo(props => {\n\n\tlet postsElements = [...props.posts]\n    .reverse()\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\n\n\tlet addNewPost = (post) => {\n\t\tprops.addPost(post)\n\t};\n\n\treturn (\n    <div className={styles.postsBlock}>\n      <h3>My posts</h3>\n      <AddPostForm addNewPost={addNewPost}/>\n      <div className={styles.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst AddPostForm = (props) => {\n  return (\n    <Formik\n      initialValues={{\n        newPostText: \"\",\n      }}\n      onSubmit={(values, { resetForm }) => {\n        props.addNewPost(values.newPostText);\n        resetForm({ values: \"\" });\n      }}\n    >\n      {() => (\n        <Form>\n          <div>\n            <Field\n              name={\"newPostText\"}\n              as={\"textarea\"}\n              placeholder={\"Enter post text\"}\n            />\n          </div>\n\n          <button type={\"submit\"}>Add Post</button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { addPost } from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPost\";\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tposts: state.profilePage.posts\n\t}\n}\n\nlet mapDisptchToProps = (dispatch) => {\n\treturn {\n\t\taddPost: (newPostText) => { \n\t\t\tdispatch(addPost(newPostText)); \n\t\t}\n\t}\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDisptchToProps)(MyPosts)\n\nexport default MyPostsContainer\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\n\nconst Profile = (props) => {\n\treturn (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatusProfile={props.updateStatusProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n}\n\nexport default Profile;","import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatusProfile,\n  updateStatusProfile,\n} from \"../../redux/profileReducer\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nconst withRouter = (WrappedComponent) => (props) => {\n  const params = useParams();\n  const navigate = useNavigate();\n  return <WrappedComponent {...props} params={params} navigate={navigate} />;\n};\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.params.userId;\n\tif (!userId) {\n\t\tuserId = this.props.authorizedUserId;\n\t\tif (!userId) {\n      \t\tthis.props.navigate({ pathname: \"/login\" }, { replace: true }); \n    \t}\n\t}\n    this.props.getUserProfile(userId);\n    this.props.getStatusProfile(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatusProfile={this.props.updateStatusProfile}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatusProfile,\n    updateStatusProfile,\n  }),\n  withRouter,\n)(ProfileContainer);\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusProfile","profile","profileImage","photos","small","userPhoto","className","styles","src","message","likesCount","MyPosts","React","postsElements","posts","reverse","map","p","AddPostForm","addNewPost","post","addPost","initialValues","newPostText","onSubmit","values","resetForm","name","as","placeholder","type","connect","state","profilePage","dispatch","ProfileContainer","userId","this","params","authorizedUserId","navigate","pathname","replace","getUserProfile","getStatusProfile","Component","compose","auth","isAuth","WrappedComponent","useParams","useNavigate"],"sourceRoot":""}